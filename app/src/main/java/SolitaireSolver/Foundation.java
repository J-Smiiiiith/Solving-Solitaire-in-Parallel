/*
 * This source file was generated by the Gradle 'init' task
 */
package SolitaireSolver;

public class Foundation {
    int spades, hearts, clubs, diamonds;

    public Foundation() {
        spades = 0;
        hearts = 0;
        clubs = 0;
        diamonds = 0;
    }

    public boolean incrementSpades() {
        if (spades != 13) {
            spades += 1;
            return true;
        }
        return false;
    }

    public boolean incrementHearts() {
        if (hearts != 13) {
            hearts += 1;
            return true;
        }
        return false;
    }

    public boolean incrementClubs() {
        if (clubs != 13) {
            clubs += 1;
            return true;
        }
        return false;
    }

    public boolean incrementDiamonds() {
        if (diamonds != 13) {
            diamonds += 1;
            return true;
        }
        return false;
    }

    public int getSpades() {
        return spades;
    }

    public int getHearts() {
        return hearts;
    }

    public int getClubs() {
        return clubs;
    }

    public int getDiamonds() {
        return diamonds;
    }

    //Note: These getters are only to visualise the game. They will not be used in actual solution.
    //      Getters returning the integer values will be used instead.

    public String[] getSpadeCards() {
        String[] spadesArray = new String[13];
        for (int i = 1; i <= spades; i++) {
            String spadeCard;
            if (i == 1) {
                spadeCard = "A-Spade";
            }
            else if (i == 11) {
                spadeCard = "J-Spade";
            }
            else if (i == 12) {
                spadeCard = "Q-Spade";
            }
            else if (i == 13) {
                spadeCard = "K-Spade";
            }
            else {
                spadeCard = i + "-Spade";
            }
            spadesArray[i] = spadeCard;
        }
        return spadesArray;
    }

    public String[] getHeartCards() {
        String[] heartsArray = new String[13];
        for (int i = 1; i <= hearts; i++) {
            String heartCard;
            if (i == 1) {
                heartCard = "A-Heart";
            }
            else if (i == 11) {
                heartCard = "J-Heart";
            }
            else if (i == 12) {
                heartCard = "Q-Heart";
            }
            else if (i == 13) {
                heartCard = "K-Heart";
            }
            else {
                heartCard = i + "-Heart";
            }
            heartsArray[i] = heartCard;
        }
        return heartsArray;
    }

    public String[] getClubCards() {
        String[] clubsArray = new String[13];
        for (int i = 1; i <= clubs; i++) {
            String clubCard;
            if (i == 1) {
                clubCard = "A-Club";
            }
            else if (i == 11) {
                clubCard = "J-Club";
            }
            else if (i == 12) {
                clubCard = "Q-Club";
            }
            else if (i == 13) {
                clubCard = "K-Club";
            }
            else {
                clubCard = i + "-Club";
            }
            clubsArray[i] = clubCard;
        }
        return clubsArray;
    }

    public String[] getDiamondCards() {
        String[] diamondsArray = new String[13];
        for (int i = 1; i <= diamonds; i++) {
            String diamondCard;
            if (i == 1) {
                diamondCard = "A-Diamond";
            }
            else if (i == 11) {
                diamondCard = "J-Diamond";
            }
            else if (i == 12) {
                diamondCard = "Q-Diamond";
            }
            else if (i == 13) {
                diamondCard = "K-Diamond";
            }
            else {
                diamondCard = i + "-Diamond";
            }
            diamondsArray[i] = diamondCard;
        }
        return diamondsArray;
    }
}
